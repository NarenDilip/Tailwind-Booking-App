plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.kos.tailwindbookingapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionNameSuffix ''
    }
    signingConfigs{
        release {
            storeFile file("docs/tailwind-book-production-keystore.jks")
            storePassword 'bo580$@O0!!90HKL'
            keyAlias 'com.kos.tailwindbookingapp'
            keyPassword 'bo580$@O0!!90HKL'
        }
        dev {
            storeFile file("docs/tailwind-qa-booking-keystore.jks")
            storePassword 'bookQa123@#T%il9o0'
            keyAlias 'com.kos.tailwindbookingapp'
            keyPassword 'bookQa123@#T%il9o0'
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }


    }
    flavorDimensions "default"
    productFlavors {
        dev {
            getProps("./config/dev.props").each {p->
                buildConfigField 'String',p.key,p.value
            }
            versionNameSuffix " dev"
        }
        qa {
            getProps("./config/qa.props").each {p->
                buildConfigField 'String',p.key,p.value
            }
            versionNameSuffix " qa"
            signingConfig android.signingConfigs.dev
        }
        production {
            getProps("./config/prod.props").each {p->
                buildConfigField 'String',p.key,p.value
            }
            versionNameSuffix " beta"
            signingConfig android.signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.room:room-common:2.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    // Okhttp3 for the POST requests
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.github.heremaps:oksse:0.9.0'

    def room_version = "2.2.6"

    implementation "androidx.room:room-common:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
}